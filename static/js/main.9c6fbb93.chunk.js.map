{"version":3,"sources":["keys.js","components/WeatherInfo.js","components/WeatherForm.js","components/WeatherMap.js","countries.js","App.js","index.js"],"names":["module","exports","WEATHER_KEY","WeatherInfo","data","this","props","sunrise","Date","getHours","sunset","className","error","city","country","style","color","temperature","top","right","src","icon","alt","temp_min","temp_max","description","feels_like","humidity","wind_speed","Component","WeatherForm","onTextChanged","e","items","value","target","suggestions","length","regex","RegExp","sort","filter","v","test","setState","text","suggestionSelected","renderSuggestions","state","map","item","i","onClick","key","playsInline","autoPlay","muted","loop","type","onSubmit","getWeather","name","placeholder","onChange","WeatherMap","id","minHeight","lat","lon","frameBorder","scrolling","marginHeight","marginWidth","title","split","App","a","preventDefault","elements","ciudad","pais","ciudadVal","trim","paisVal","API_URL","fetch","res","json","main","temp","weather","wind","speed","sys","coord","countries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c6fbb93.chunk.js","sourcesContent":["module.exports = {\r\n  WEATHER_KEY: '&APPID=caa0e619ec1ebdf86d53114a2d50a7d9'\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport './WIassets/WeatherInfo.css';\r\n\r\nclass WeatherInfo extends Component {\r\n  render(){\r\n    const data = this.props;\r\n\r\n    const amanecer = new Date(data.sunrise*1000);\r\n    const sunrise = amanecer.getHours() + \"am\";\r\n\r\n\r\n    const atardecer = new Date(data.sunset*1000);\r\n    const sunset = atardecer.getHours() + \"hs\";\r\n\r\n    return (\r\n\r\n      <div className=\"wrapper-info\">\r\n\r\n        <section className=\"resume-section\">\r\n\r\n        {\r\n          data.error &&\r\n          <div className=\"alert alert-danger my-4\">\r\n            <p>\r\n              {data.error}\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n        {\r\n          !data.error && !data.city && !data.country &&\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"alert alert-primary my-4\">\r\n              <p>\r\n                Introduce Ciudad y País\r\n              </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        {\r\n\r\n          !data.error && data.city && data.country ?\r\n            <div className=\"resume-section-content\">\r\n\r\n              <h2 className=\"mb-5\" style={{color: \"#C72B7B\"}}>{data.city} <small><span style={{color:\"#ACB6C4\"}}>{data.country}</span></small></h2>\r\n\r\n              <div className=\"d-flex flex-column flex-md-row mb-5\">\r\n                  <div className=\"icon-anchor\">\r\n\r\n                    <div className=\"position-relative\">\r\n                      <h3 className=\"mb-0\">Temp: {data.temperature} ºC</h3>\r\n                      <img className=\"position-absolute\" style={{top: \"-30px\",right: \"0\"}} src={\"http://openweathermap.org/img/wn/\" + data.icon + \"@2x.png\"} alt=\"This icon showing a reference of the weather\"/>\r\n                    </div>\r\n                    <div className=\"subheading mb-3\">\r\n                      <span style={{color:\"#68D0BC\"}}>Min: {data.temp_min} ºC /</span> <span style={{color:\"#FF5417\"}}>Max: {data.temp_max} ºC</span>\r\n                      <p>\r\n                         Amanecer: {sunrise} - Atardecer: {sunset}\r\n                      </p>\r\n                    </div>\r\n                    <h4 style={{color: \"#C72B7B\"}}>{data.description}</h4>\r\n                    <p>\r\n                      Sensación térmica {data.feels_like} ºC | Humedad: {data.humidity} % | Velocidad del Viento: {data.wind_speed} Km/h\r\n                    </p>\r\n                  </div>\r\n              </div>\r\n\r\n              <p className=\"text-center\">\r\n                <small style={{color:\"#ACB6C4\"}}>La ubicación en el mapa corresponde a la estación climática que toma los datos.</small>\r\n              </p>\r\n\r\n            </div>\r\n\r\n          :\r\n\r\n          <div className=\"mb-4\"/>\r\n\r\n        }\r\n\r\n        </section>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WeatherInfo;\r\n","import React, {Component} from 'react';\r\n\r\n// CSS\r\nimport './WIassets/WeatherForm.css';\r\n\r\nclass WeatherForm extends Component {\r\n  constructor (props){\r\n    super(props);\r\n    // this.items = [\r\n    //   \"alalal\",\r\n    //   \"alalal\",\r\n    //   \"alalal\",\r\n    //   \"alalal\",\r\n    //   \"jnewrjjwer\",\r\n    //   \"sasdas\"\r\n    // ];\r\n\r\n    this.state = {\r\n      suggestions: [],\r\n      text: \"\"\r\n    };\r\n\r\n  }\r\n\r\n  onTextChanged = e => {\r\n    const {items} = this.props;\r\n    const value = e.target.value;\r\n    let suggestions = [];\r\n    if (value.length > 0){\r\n      const regex = new RegExp(`^${value}`,'i');\r\n      suggestions = items.sort().filter(v => regex.test(v));\r\n    }\r\n    // this.setState({suggestions});\r\n    this.setState({suggestions, text: value});\r\n  }\r\n\r\n  suggestionSelected = value => {\r\n    this.setState({\r\n      text: value,\r\n      suggestions: []\r\n    })\r\n  }\r\n\r\n  renderSuggestions = e => {\r\n    const {suggestions} = this.state;\r\n    if (suggestions.length === 0){ return null; }\r\n    return (\r\n      <div className=\"position-relative\">\r\n        <ul className=\"auto-li text-muted px-4 position-absolute w-100\">\r\n          {suggestions.map((item,i) => <li onClick={() => this.suggestionSelected(item)} key={i}>{item}</li>)}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const {text} = this.state;\r\n    return (\r\n      <header className=\"p-4 d-flex align-items-center\">\r\n        <div className=\"overlay\"></div>\r\n        <video playsInline=\"playsinline\" autoPlay=\"autoplay\" muted=\"muted\" loop=\"loop\">\r\n          <source src=\"https://storage.googleapis.com/coverr-main/mp4/Mt_Baker.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n        <div className=\"container h-100\">\r\n          <div className=\"d-flex h-100 text-center align-items-center\">\r\n            <div className=\"w-100 text-white p-4\">\r\n              <h1 className=\"display-3\">Weather API</h1>\r\n\r\n              <div className=\"divider-custom divider-light d-flex align-items-center p-0 mt-0\">\r\n                <div className=\"divider-custom-line\"></div>\r\n                <div className=\"divider-custom-icon\">Busca tu ciudad</div>\r\n                <div className=\"divider-custom-line\"></div>\r\n              </div>\r\n\r\n              <div className=\"col-md-10 col-lg-8 col-xl-7 mx-auto\">\r\n                <form onSubmit={this.props.getWeather}>\r\n\r\n                  <div className=\"form-row\">\r\n\r\n                    <div className=\"col-12 col-md-6 mb-2 mb-md-0 auto-ul\">\r\n                      <input type=\"text\" name=\"ciudad\" className=\"form-control form-control-lg\" placeholder=\"Ciudad\"/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-3 mb-2 mb-md-0 auto-ul\">\r\n                      <input type=\"text\" name=\"pais\" className=\"form-control form-control-lg\" placeholder=\"País\" onChange={this.onTextChanged} value={text}/>\r\n                      {this.renderSuggestions()}\r\n                    </div>\r\n                    <div className=\"col-12 col-md-3\">\r\n                      <button type=\"submit\" className=\"btn btn-block btn-lg btn-primary\">Buscar!</button>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </form>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WeatherForm;\r\n","import React,{Component} from 'react';\r\n\r\nclass WeatherMap extends Component {\r\n  render(){\r\n    return (\r\n      <section id=\"map\" className=\"map-area\">\r\n\r\n        <div className=\"mapouter\">\r\n          <div className=\"gmap_canvas\">\r\n            <iframe style={{minHeight: \"75vh\"}} id=\"gmap_canvas\" src={`https://maps.google.com/maps?q=@${this.props.lat},${this.props.lon}&t=&z=13&ie=UTF8&iwloc=&output=embed`} frameBorder=\"0\" scrolling=\"no\" marginHeight=\"0\" marginWidth=\"0\" title=\"weatherMap\"></iframe>\r\n          </div>\r\n        </div>\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WeatherMap;\r\n","export default `Afganistán\r\nAlbania\r\nArgelia\r\nAndorra\r\nAngola\r\nAntigua y Deps\r\nArgentina\r\nArmenia\r\nAustralia\r\nAustria\r\nAzerbaiyán\r\nBahamas\r\nBahrein\r\nBangladesh\r\nBarbados\r\nBielorrusia\r\nBélgica\r\nBelice\r\nBenin\r\nBután\r\nBolivia\r\nBosnia Herzegovina\r\nBotsuana\r\nBrasil\r\nBrunei\r\nBulgaria\r\nBurkina\r\nBurundi\r\nCamboya\r\nCamerún\r\nCanadá\r\nCabo Verde\r\nRepresentante de África Central\r\nChad\r\nChile\r\nChina\r\nColombia\r\nComoras\r\nCongo\r\nCongo {Rep. Democrática}\r\nCosta Rica\r\nCroacia\r\nCuba\r\nChipre\r\nRepublica checa\r\nDinamarca\r\nDjibouti\r\nDominica\r\nRepública Dominicana\r\nTimor Oriental\r\nEcuador\r\nEgipto\r\nEl Salvador\r\nGuinea Ecuatorial\r\nEritrea\r\nEstonia\r\nEtiopía\r\nFiyi\r\nFinlandia\r\nFrancia\r\nGabón\r\nGambia\r\nGeorgia\r\nAlemania\r\nGhana\r\nGrecia\r\nGranada\r\nGuatemala\r\nGuinea\r\nGuinea-Bissau\r\nGuayana\r\nHaití\r\nHonduras\r\nHungría\r\nIslandia\r\nIndia\r\nIndonesia\r\nIran\r\nIrak\r\nIrlanda {República}\r\nIsrael\r\nItalia\r\nCosta de Marfil\r\nJamaica\r\nJapón\r\nJordán\r\nKazajstán\r\nKenia\r\nKiribati\r\nCorea del Norte\r\nCorea del Sur\r\nKosovo\r\nKuwait\r\nKirguistán\r\nLaos\r\nLetonia\r\nLíbano\r\nLesoto\r\nLiberia\r\nLibia\r\nLiechtenstein\r\nLituania\r\nLuxemburgo\r\nmacedonia\r\nMadagascar\r\nMalawi\r\nMalasia\r\nMaldivas\r\nMali\r\nMalta\r\nIslas Marshall\r\nMauritania\r\nMauricio\r\nMexico\r\nMicronesia\r\nMoldavia\r\nMónaco\r\nMongolia\r\nMontenegro\r\nMarruecos\r\nMozambique\r\nMyanmar, {Birmania}\r\nNamibia\r\nNauru\r\nNepal\r\nPaíses Bajos\r\nNueva Zelanda\r\nNicaragua\r\nNíger\r\nNigeria\r\nNoruega\r\nOmán\r\nPakistán\r\nPalau\r\nPanamá\r\nPapúa Nueva Guinea\r\nParaguay\r\nPerú\r\nFilipinas\r\nPolonia\r\nPortugal\r\nKatar\r\nRumania\r\nFederación Rusa\r\nRuanda\r\nSan Cristóbal y Nieves\r\nSanta Lucía\r\nSan Vicente y las Granadinas\r\nSamoa\r\nSan Marino\r\nSanto Tomé y Príncipe\r\nArabia Saudita\r\nSenegal\r\nSerbia\r\nSeychelles\r\nSierra Leona\r\nSingapur\r\nEslovaquia\r\nEslovenia\r\nIslas Salomón\r\nSomalia\r\nSudáfrica\r\nSudán del Sur\r\nEspaña\r\nSri Lanka\r\nSudán\r\nSurinam\r\nSwazilandia\r\nSuecia\r\nSuiza\r\nSiria\r\nTaiwán\r\nTayikistán\r\nTanzania\r\nTailandia\r\nIr\r\nTonga\r\nTrinidad y Tobago\r\nTúnez\r\npavo\r\nTurkmenistán\r\nTuvalu\r\nUganda\r\nUcrania\r\nEmiratos Árabes Unidos\r\nReino Unido\r\nEstados Unidos\r\nUruguay\r\nUzbekistán\r\nVanuatu\r\nCiudad del Vaticano\r\nVenezuela\r\nVietnam\r\nYemen\r\nZambia\r\nZimbabue`.split('\\n');\r\n","import React, {Component} from 'react';\r\n\r\n// Components\r\nimport WeatherInfo from \"./components/WeatherInfo\";\r\nimport WeatherForm from \"./components/WeatherForm\";\r\nimport WeatherMap from './components/WeatherMap';\r\n\r\nimport {WEATHER_KEY} from './keys';\r\n\r\n// JSON Countries\r\nimport countries from './countries';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    temperature: \"\",\r\n    description: \"\",\r\n    humidity: \"\",\r\n    wind_speed: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    feels_like: \"\",\r\n    temp_max: \"\",\r\n    temp_min: \"\",\r\n    icon: \"\",\r\n    sunrise: \"\",\r\n    sunset: \"\",\r\n    lat: \"40.4169019\",\r\n    lon: \"-3.7056774\",\r\n    error: null,\r\n  }\r\n\r\n  getWeather = async e => {\r\n    e.preventDefault();\r\n\r\n    // get form inputs\r\n    const {ciudad,pais} = e.target.elements;\r\n    let ciudadVal = ciudad.value.trim();\r\n    let paisVal = pais.value.trim();\r\n\r\n    if (ciudadVal && paisVal){\r\n\r\n      // API\r\n      const API_URL = `https://api.openweathermap.org/data/2.5/weather?q=${ciudadVal},${paisVal}${WEATHER_KEY}&units=metric`;\r\n      const res = await fetch(API_URL);\r\n      const data = await res.json();\r\n\r\n      if (data.main){\r\n        this.setState({\r\n          temperature: data.main.temp,\r\n          description: data.weather[0].description,\r\n          humidity: data.main.humidity,\r\n          wind_speed: data.wind.speed,\r\n          city: data.name,\r\n          country: data.sys.country,\r\n          feels_like: data.main.feels_like,\r\n          temp_max: data.main.temp_max,\r\n          temp_min: data.main.temp_min,\r\n          icon: data.weather[0].icon,\r\n          sunrise: data.sys.sunrise,\r\n          sunset: data.sys.sunset,\r\n          coord: data.coord,\r\n          lat: data.coord.lat,\r\n          lon: data.coord.lon,\r\n          error: null\r\n        })\r\n      }\r\n      else {\r\n        this.setState({\r\n          error: \"Ciudad no encontrada. Por favor, revise si el país se corresponde o si la ciudad esta escrita correctamente.\"\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <WeatherForm items={countries} getWeather={this.getWeather}/>\r\n        <WeatherInfo {...this.state}/>\r\n        <WeatherMap lat={this.state.lat} lon={this.state.lon}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// Components\r\nimport App from './App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}